@model IEnumerable<burgerBurger.Models.Inventory>

@{
    ViewData["Title"] = "Inventory";
    
}

<h1 class="text-white">Inventory</h1>

<p>
    <a asp-action="Create" class="text-white">Create</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.itemName)
            </th>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.quantity)
            </th>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.calories)
            </th>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.itemShelfLife)
            </th>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.itemDeliveryDate)
            </th>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.itemExpirey)
            </th>
            <th class="text-white">
                @Html.DisplayNameFor(model => model.itemExpireCheck)
            </th>
            <th class="text-white"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-white">
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td class="text-white">
                    @Html.DisplayFor(modelItem => item.itemName)
                </td>
                <td class="text-white">
                    @Html.DisplayFor(modelItem => item.quantity)
                </td>
                @if (item.Category != burgerBurger.Enums.InventoryCategory.Package)
                {
                    <td class="text-white">
                        @Html.DisplayFor(modelItem => item.calories)
                    </td>
                    <td class="text-white">
                        @Html.DisplayFor(modelItem => item.itemShelfLife)
                    </td>
                    <td class="text-white">
                        @Html.DisplayFor(modelItem => item.itemDeliveryDate)
                    </td>
                    <td class="text-white">
                        @Html.DisplayFor(modelItem => item.itemExpirey)
                    </td>
                    <td class="text-white">
                        @Html.DisplayFor(modelItem => item.itemExpireCheck)
                    </td>
                    <td class="text-white">
                        <a asp-action="Details" asp-route-id="@item.InventoryId" class="text-white">Details</a> |
                        <a asp-action="ThrowOut" asp-route-id="@item.InventoryId" class="text-white">Throw Out</a>
                    </td>
                }
                else
                {
                    <td class="text-white"></td>
                    <td class="text-white"></td>
                    <td class="text-white">
                        @Html.DisplayFor(modelItem => item.itemDeliveryDate)
                    </td>
                    <td class="text-white"></td>
                    <td class="text-white"></td>
                    <td class="text-white">
                        <a asp-action="Details" asp-route-id="@item.InventoryId" class="text-white">Details</a>
                    </td>
                }
            </tr>          
        }
        <tr>
            <td colspan="3" class="text-center">
                <a asp-action="BalanceSheet" asp-route-locationId="@ViewData["locationId"]" class="btn btn-primary">Balance Sheet</a>
            </td>
            <td colspan="3" class="text-center">
                <a asp-action="ThrownOutItems" asp-route-locationId="@ViewData["locationId"]" class="btn btn-primary">View Garbage</a>
            </td>
        </tr>
    </tbody>
</table>
