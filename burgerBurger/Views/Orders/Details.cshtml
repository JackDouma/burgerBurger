@model burgerBurger.Models.Order

@{
    ViewData["Title"] = "Order Details";
}

<div>
    <h4>Order</h4>
    <hr />
    @if ((User.IsInRole("Manager") || User.IsInRole("Owner") || User.IsInRole("Admin")) && Model.Status != "Completed")
    {
        <form method="post" asp-controller="Orders" asp-action="Update" style="display: flex;align-items: center;justify-content: center;" class="form-group">
            @Html.AntiForgeryToken()
            <label name="Status" asp-for="Status" class="form-label">Update Status</label>
            <select asp-for="Status" class="form-control">
                <option value="Active">Active</option>
                <option value="On Its Way">On Its Way</option>
                <option value="Completed">Completed</option>
            </select>
            <input name="ItemId" type="hidden" value=@Model.OrderId />
            <button class="btn btn-primary m-3">Update</button>
        </form>
    }
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderTotal)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderTotal)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.location
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DeliveryDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DeliveryDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Province)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Province)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostalCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PostalCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CustomerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CustomerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PaymentCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PaymentCode)
        </dd>
    </dl>
</div>
<section>
    <h2>Order Items</h2>
    <table class="table table-striped">
        <thead>
        <th>Product</th>
        <th>Quantity</th>
        <th>Price</th>
        </thead>
        @foreach (var detail in Model.OrderDetails)
        {
            <tr>
                <td>@detail.Item.Name</td>
                <td>@detail.Quantity</td>
                <td>@detail.Price</td>
            </tr>

        }
    </table>
</section>
<div>
    <a asp-action="Index">Back to List</a>
</div>
